# Copyright (c) 2024 k-paulius
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: 2010-09-09
Description: 'VPC Endpoints'

Parameters:

  pParentVPCStackName:
    Description: 'Name of the parent VPC stack'
    Type: String

  pNumberOfAZs:
    Description: 'Number of Availability Zones (AZs) to use: 1, 2, or 3.'
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 3

  pDeployEICEEndpoint:
    Description: 'Deploy EC2 Instance Connect Endpoint?'
    Type: String
    Default: false
    AllowedValues:
      - true
      - false

  pDeploySSMEndpoints:
    Description: 'Deploy SSM Endpoints: ec2messages, ssm, ssmmessages?'
    Type: String
    Default: false
    AllowedValues:
      - true
      - false

  pWorkloadIdTag:
    Description: 'Workload Id (value used in the "workload-id" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Workload Id value must contain only alphanumeric characters, hyphens, and underscores'

  pEnvironmentIdTag:
    Description: 'Environment Id (value used in the "environment-id" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Environment Id value must contain only alphanumeric characters, hyphens, and underscores'

  pOwnerNameTag:
    Description: 'Owner Name (value used in the "owner" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Owner name value must contain only alphanumeric characters, hyphens, and underscores'

Conditions:

  cIs2ndAZEnabled: !Or [!Equals [!Ref pNumberOfAZs, '2'], !Equals [!Ref pNumberOfAZs, '3']]
  cIs3rdAZEnabled: !Equals [!Ref pNumberOfAZs, '3']
  cDeployEICEEndpoint: !Equals [!Ref pDeployEICEEndpoint, 'true']
  cDeploySSMEndpoints: !Equals [!Ref pDeploySSMEndpoints, 'true']

Resources:

  rSecurityGroupEICE:
    Condition: cDeployEICEEndpoint
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-sg-eice']]
      GroupDescription: 'SG for EC2 Instance Connect Endpoint'
      VpcId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCId'}
      SecurityGroupEgress:
        - Description: 'Allows outbound SSH traffic to the VPC'
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-IPv4CidrBlock'}
      # SecurityGroupIngress:
      # Note: Traffic to the endpoint originates from the EICE Service, and it is allowed regardless of the inbound rules for the endpoint SG
      Tags:
        - Key: Name
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-sg-eice']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rInstanceConnectEndpoint:
    Condition: cDeployEICEEndpoint
    Type: AWS::EC2::InstanceConnectEndpoint
    Properties:
      SubnetId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateA1'}
      PreserveClientIp: false
      SecurityGroupIds:
        - !Ref rSecurityGroupEICE
      Tags:
        - Key: Name
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-endpoint-eice']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rSecurityGroupEndpoints:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-sg-endpoints']]
      GroupDescription: 'SG for VPC Endpoints'
      VpcId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCId'}
      SecurityGroupEgress:
        - Description: 'Allows outbound HTTPS traffic to the VPC'
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-IPv4CidrBlock'}
      SecurityGroupIngress:
        - Description: 'Allows inbound HTTPS traffic from the VPC'
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-IPv4CidrBlock'}
      Tags:
        - Key: Name
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-sg-endpoints']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rVPCEndpointSSM:
    Condition: cDeploySSMEndpoints
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      VpcId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCId'}
      SubnetIds:
        - {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateA1'}
        - !If [cIs2ndAZEnabled, {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateB1'}, !Ref 'AWS::NoValue']
        - !If [cIs3rdAZEnabled, {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateC1'}, !Ref 'AWS::NoValue']
      SecurityGroupIds:
        - !Ref rSecurityGroupEndpoints
      PolicyDocument:
        Statement:
          - Action: '*'
            Effect: Allow
            Principal: '*'
            Resource: '*'

  rVPCEndpointSSMMessages:
    Condition: cDeploySSMEndpoints
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssmmessages'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      VpcId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCId'}
      SubnetIds:
        - {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateA1'}
        - !If [cIs2ndAZEnabled, {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateB1'}, !Ref 'AWS::NoValue']
        - !If [cIs3rdAZEnabled, {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateC1'}, !Ref 'AWS::NoValue']
      SecurityGroupIds:
        - !Ref rSecurityGroupEndpoints
      PolicyDocument:
        Statement:
          - Action: '*'
            Effect: Allow
            Principal: '*'
            Resource: '*'

  rVPCEndpointEC2Messages:
    Condition: cDeploySSMEndpoints
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2messages'
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      VpcId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCId'}
      SubnetIds:
        - {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateA1'}
        - !If [cIs2ndAZEnabled, {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateB1'}, !Ref 'AWS::NoValue']
        - !If [cIs3rdAZEnabled, {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPrivateC1'}, !Ref 'AWS::NoValue']
      SecurityGroupIds:
        - !Ref rSecurityGroupEndpoints
      PolicyDocument:
        Statement:
          - Action: '*'
            Effect: Allow
            Principal: '*'
            Resource: '*'

Outputs:

  oTemplateVersion:
    Description: 'Template version'
    Value: '1.0.0'
