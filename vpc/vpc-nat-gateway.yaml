# Copyright (c) 2024 k-paulius
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: 2010-09-09
Description: 'VPC NAT Gateways'

Parameters:

  pParentVPCStackName:
    Description: 'Name of the parent VPC stack'
    Type: String

  pNumberOfAZs:
    Description: 'Number of Availability Zones (AZs) to use: 1, 2, or 3'
    Type: Number
    Default: 2
    MinValue: 1
    MaxValue: 3

  pEnableSingleAZRouting:
    Description: 'Route traffic from all subnets through a single NAT Gateway (single AZ routing)'
    Type: String
    Default: false
    AllowedValues:
      - true
      - false

  pWorkloadIdTag:
    Description: 'Workload Id (value used in the "workload-id" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Workload Id value must contain only alphanumeric characters, hyphens, and underscores'

  pEnvironmentIdTag:
    Description: 'Environment Id (value used in the "environment-id" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Environment Id value must contain only alphanumeric characters, hyphens, and underscores'

  pOwnerNameTag:
    Description: 'Owner Name (value used in the "owner" tag)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9\-_]+'
    ConstraintDescription: 'Owner name value must contain only alphanumeric characters, hyphens, and underscores'

Conditions:

  cIsSingleAZRouting: !Equals [!Ref pEnableSingleAZRouting, 'true']
  cIs2ndAZEnabled: !Or [!Equals [!Ref pNumberOfAZs, '2'], !Equals [!Ref pNumberOfAZs, '3']]
  cIs3rdAZEnabled: !Equals [!Ref pNumberOfAZs, '3']
  cCreateNATGWin2ndAZ: !And [!Not [!Condition cIsSingleAZRouting], !Condition cIs2ndAZEnabled]
  cCreateNATGWin3rdAZ: !And [!Not [!Condition cIsSingleAZRouting], !Condition cIs3rdAZEnabled]

Resources:

  rEIPA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: 'Name'
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-natgw-eip-a']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rEIPB:
    Condition: cCreateNATGWin2ndAZ
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: 'Name'
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-natgw-eip-b']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rEIPC:
    Condition: cCreateNATGWin3rdAZ
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: 'Name'
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-natgw-eip-c']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rNatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt rEIPA.AllocationId
      ConnectivityType: public
      SubnetId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPublicA'}
      Tags:
        - Key: 'Name'
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-natgw-a']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rNatGatewayB:
    Condition: cCreateNATGWin2ndAZ
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt rEIPB.AllocationId
      ConnectivityType: public
      SubnetId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPublicB'}
      Tags:
        - Key: 'Name'
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-natgw-b']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rNatGatewayC:
    Condition: cCreateNATGWin3rdAZ
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt rEIPC.AllocationId
      ConnectivityType: public
      SubnetId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-SubnetPublicC'}
      Tags:
        - Key: 'Name'
          Value: !Join ['', [{'Fn::ImportValue': !Sub '${pParentVPCStackName}-VPCName'}, '-natgw-c']]
        - Key: 'workload-id'
          Value: !Ref pWorkloadIdTag
        - Key: 'environment-id'
          Value: !Ref pEnvironmentIdTag
        - Key: 'owner'
          Value: !Ref pOwnerNameTag

  rRouteTablePrivateA1InternetRouteIPv4:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref rNatGatewayA
      RouteTableId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-RouteTablePrivateA1'}

  rRouteTablePrivateB1InternetRouteIPv4:
    Condition: cIs2ndAZEnabled
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !If [cIsSingleAZRouting, !Ref rNatGatewayA, !Ref rNatGatewayB]
      RouteTableId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-RouteTablePrivateB1'}

  rRouteTablePrivateC1InternetRouteIPv4:
    Condition: cIs3rdAZEnabled
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !If [cIsSingleAZRouting, !Ref rNatGatewayA, !Ref rNatGatewayC]
      RouteTableId: {'Fn::ImportValue': !Sub '${pParentVPCStackName}-RouteTablePrivateC1'}

Outputs:

  oTemplateVersion:
    Description: 'Template version'
    Value: '1.0.0'
